# Generated by Django 2.2.24 on 2021-09-27 13:55

from django.db import migrations, models
import django.db.models.deletion
import privates.fields
import privates.storages


def create_stuf_services(apps, _):
    """
    We're splitting the SoapService model into the SoapService model
    and StufService model we want to create the proper StufService model instances
    """
    SoapService = apps.get_model("stuf", "SoapService")
    StufService = apps.get_model("stuf", "StufService")
    for soap_service in SoapService.objects.all():
        StufService.objects.create(
            soap_service=soap_service,
            ontvanger_organisatie=soap_service.ontvanger_organisatie,
            ontvanger_applicatie=soap_service.ontvanger_applicatie,
            ontvanger_administratie=soap_service.ontvanger_administratie,
            ontvanger_gebruiker=soap_service.ontvanger_gebruiker,
            zender_organisatie=soap_service.zender_organisatie,
            zender_applicatie=soap_service.zender_applicatie,
            zender_administratie=soap_service.zender_administratie,
            zender_gebruiker=soap_service.zender_gebruiker,
            endpoint_beantwoord_vraag=soap_service.endpoint_beantwoord_vraag,
            endpoint_vrije_berichten=soap_service.endpoint_vrije_berichten,
            endpoint_ontvang_asynchroon=soap_service.endpoint_ontvang_asynchroon,
            soap_version=soap_service.soap_version,
            endpoint_security=soap_service.endpoint_security,
            user=soap_service.user,
            password=soap_service.password,
            certificate=soap_service.certificate,
            certificate_key=soap_service.certificate_key,
        )


class Migration(migrations.Migration):

    dependencies = [
        ("stuf", "0007_auto_20210924_1518"),
    ]

    operations = [
        migrations.CreateModel(
            name="StufService",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ontvanger_organisatie",
                    models.CharField(
                        blank=True,
                        help_text="Field 'ontvanger organisatie' in StUF",
                        max_length=200,
                        verbose_name="receiving organisation",
                    ),
                ),
                (
                    "ontvanger_applicatie",
                    models.CharField(
                        help_text="Field 'ontvanger applicatie' in StUF",
                        max_length=200,
                        verbose_name="receiving application",
                    ),
                ),
                (
                    "ontvanger_administratie",
                    models.CharField(
                        blank=True,
                        help_text="Field 'ontvanger administratie' in StUF",
                        max_length=200,
                        verbose_name="receiving administration",
                    ),
                ),
                (
                    "ontvanger_gebruiker",
                    models.CharField(
                        blank=True,
                        help_text="Field 'ontvanger gebruiker' in StUF",
                        max_length=200,
                        verbose_name="receiving user",
                    ),
                ),
                (
                    "zender_organisatie",
                    models.CharField(
                        blank=True,
                        help_text="Field 'zender organisatie' in StUF",
                        max_length=200,
                        verbose_name="sending organisation",
                    ),
                ),
                (
                    "zender_applicatie",
                    models.CharField(
                        help_text="Field 'zender applicatie' in StUF",
                        max_length=200,
                        verbose_name="sending application",
                    ),
                ),
                (
                    "zender_administratie",
                    models.CharField(
                        blank=True,
                        help_text="Field 'zender administratie' in StUF",
                        max_length=200,
                        verbose_name="sending administration",
                    ),
                ),
                (
                    "zender_gebruiker",
                    models.CharField(
                        blank=True,
                        help_text="Field 'zender gebruiker' in StUF",
                        max_length=200,
                        verbose_name="sending user",
                    ),
                ),
                (
                    "endpoint_beantwoord_vraag",
                    models.URLField(
                        blank=True,
                        help_text="Endpoint for synchronous request messages, usually '[...]/BeantwoordVraag'",
                        verbose_name="endpoint BeantwoordVraag",
                    ),
                ),
                (
                    "endpoint_vrije_berichten",
                    models.URLField(
                        blank=True,
                        help_text="Endpoint for synchronous free messages, usually '[...]/VerwerkSynchroonVrijBericht' or '[...]/VrijeBerichten'.",
                        verbose_name="endpoint VrijeBerichten",
                    ),
                ),
                (
                    "endpoint_ontvang_asynchroon",
                    models.URLField(
                        blank=True,
                        help_text="Endpoint for asynchronous messages, usually '[...]/OntvangAsynchroon'.",
                        verbose_name="endpoint OntvangAsynchroon",
                    ),
                ),
                (
                    "soap_version",
                    models.CharField(
                        choices=[("1.1", "SOAP 1.1"), ("1.2", "SOAP 1.2")],
                        default="1.2",
                        help_text="The SOAP version to use for the message envelope.",
                        max_length=5,
                        verbose_name="SOAP version",
                    ),
                ),
                (
                    "endpoint_security",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("basicauth", "Basic authentication"),
                            ("wss", "SOAP extension: WS-Security"),
                            ("wss_basicauth", "Both"),
                        ],
                        help_text="The security to use for messages sent to the endpoints.",
                        max_length=20,
                        verbose_name="Security",
                    ),
                ),
                (
                    "user",
                    models.CharField(
                        blank=True,
                        help_text="Username to use in the XML security context.",
                        max_length=200,
                        verbose_name="user",
                    ),
                ),
                (
                    "password",
                    models.CharField(
                        blank=True,
                        help_text="Password to use in the XML security context.",
                        max_length=200,
                        verbose_name="password",
                    ),
                ),
                (
                    "certificate",
                    privates.fields.PrivateMediaFileField(
                        blank=True,
                        help_text="The SSL certificate file used for client identification. If left empty, mutual TLS is disabled.",
                        null=True,
                        storage=privates.storages.PrivateMediaFileSystemStorage(),
                        upload_to="stuf/certificate/",
                    ),
                ),
                (
                    "certificate_key",
                    privates.fields.PrivateMediaFileField(
                        blank=True,
                        help_text="The SSL certificate key file used for client identification. If left empty, mutual TLS is disabled.",
                        null=True,
                        storage=privates.storages.PrivateMediaFileSystemStorage(),
                        upload_to="stuf/certificate/",
                    ),
                ),
                (
                    "soap_service",
                    models.OneToOneField(
                        help_text="The soap service this stuf service uses",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stuf_service",
                        to="stuf.SoapService",
                    ),
                ),
            ],
            options={
                "verbose_name": "StUF service",
                "verbose_name_plural": "StUF services",
            },
        ),
        migrations.RunPython(create_stuf_services, migrations.RunPython.noop),
        migrations.RemoveField(
            model_name="soapservice",
            name="certificate",
        ),
        migrations.RemoveField(
            model_name="soapservice",
            name="certificate_key",
        ),
        migrations.RemoveField(
            model_name="soapservice",
            name="endpoint_beantwoord_vraag",
        ),
        migrations.RemoveField(
            model_name="soapservice",
            name="endpoint_ontvang_asynchroon",
        ),
        migrations.RemoveField(
            model_name="soapservice",
            name="endpoint_security",
        ),
        migrations.RemoveField(
            model_name="soapservice",
            name="endpoint_vrije_berichten",
        ),
        migrations.RemoveField(
            model_name="soapservice",
            name="ontvanger_administratie",
        ),
        migrations.RemoveField(
            model_name="soapservice",
            name="ontvanger_applicatie",
        ),
        migrations.RemoveField(
            model_name="soapservice",
            name="ontvanger_gebruiker",
        ),
        migrations.RemoveField(
            model_name="soapservice",
            name="ontvanger_organisatie",
        ),
        migrations.RemoveField(
            model_name="soapservice",
            name="password",
        ),
        migrations.RemoveField(
            model_name="soapservice",
            name="soap_version",
        ),
        migrations.RemoveField(
            model_name="soapservice",
            name="user",
        ),
        migrations.RemoveField(
            model_name="soapservice",
            name="zender_administratie",
        ),
        migrations.RemoveField(
            model_name="soapservice",
            name="zender_applicatie",
        ),
        migrations.RemoveField(
            model_name="soapservice",
            name="zender_gebruiker",
        ),
        migrations.RemoveField(
            model_name="soapservice",
            name="zender_organisatie",
        ),
        migrations.AlterField(
            model_name="soapservice",
            name="url",
            field=models.URLField(
                blank=True,
                help_text="URL of the service to connect to.",
                verbose_name="URL",
            ),
        ),
    ]
