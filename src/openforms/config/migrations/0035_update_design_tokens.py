# Generated by Django 3.2.16 on 2023-01-05 09:30

from django.db import migrations
from glom import glom, assign, delete

from ..utils import remove_empty_design_tokens


def add_prefix_to_design_tokens_and_replace_link_colours(apps, _):
    GlobalConfiguration = apps.get_model("config", "GlobalConfiguration")
    config = GlobalConfiguration.objects.first()

    if not config:
        return

    modified = False
    if config.design_token_values:
        config.design_token_values = {"of": config.design_token_values}
        modified = True

    if link_colour := glom(config.design_token_values, "of.link.color", default=None):
        assign(
            config.design_token_values, "utrecht.link.color", link_colour, missing=dict
        )
        delete(config.design_token_values, "of.link.color")
        modified = True

    if link_hover_colour := glom(
        config.design_token_values, "of.link.hover.color", default=None
    ):
        assign(
            config.design_token_values,
            "utrecht.link.hover.color",
            link_hover_colour,
            missing=dict,
        )
        delete(config.design_token_values, "of.link.hover.color")
        modified = True

    if modified:
        config.design_token_values = remove_empty_design_tokens(
            config.design_token_values
        )
        config.save()


def remove_prefixes_and_replace_link_colours(apps, _):
    GlobalConfiguration = apps.get_model("config", "GlobalConfiguration")
    config = GlobalConfiguration.objects.first()

    if not config or not config.design_token_values:
        return

    link_colour = glom(config.design_token_values, "utrecht.link.color", default=None)
    link_hover_colour = glom(
        config.design_token_values, "utrecht.link.hover.color", default=None
    )

    if config.design_token_values:
        config.design_token_values = config.design_token_values["of"]

    if link_colour:
        assign(config.design_token_values, "link.color", link_colour, missing=dict)
    if link_hover_colour:
        assign(
            config.design_token_values,
            "link.hover.color",
            link_hover_colour,
            missing=dict,
        )

    config.save()


class Migration(migrations.Migration):

    dependencies = [
        ("config", "0034_alter_globalconfiguration_form_upload_default_file_types"),
    ]

    operations = [
        migrations.RunPython(
            add_prefix_to_design_tokens_and_replace_link_colours,
            remove_prefixes_and_replace_link_colours,
        ),
    ]
