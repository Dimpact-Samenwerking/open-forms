# Generated by Django 3.2.21 on 2023-09-21 10:51

from django.conf import settings
from django.core.cache import caches
from django.db import migrations


def from_bag_to_kadaster(apps, schema_editor):
    BagConfig = apps.get_model("bag", "BagConfig")
    KadasterApiConfig = apps.get_model("kadaster", "KadasterApiConfig")

    bag_config = BagConfig.objects.first()
    kadaster_config = KadasterApiConfig.objects.first()
    if not bag_config or not kadaster_config:
        return

    if service := bag_config.bag_service:
        kadaster_config.bag_service = service
        kadaster_config.save()
        caches[settings.SOLO_CACHE].clear()


def from_kadaster_to_bag(apps, schema_editor):
    BagConfig = apps.get_model("bag", "BagConfig")
    KadasterApiConfig = apps.get_model("kadaster", "KadasterApiConfig")

    bag_config = BagConfig.objects.first()
    kadaster_config = KadasterApiConfig.objects.first()
    if not bag_config or not kadaster_config:
        return

    if service := kadaster_config.bag_service:
        bag_config.bag_service = service
        bag_config.save()
        caches[settings.SOLO_CACHE].clear()


class Migration(migrations.Migration):

    dependencies = [
        ("kadaster", "0002_kadasterapiconfig_bag_service"),
        ("bag", "0001_initial"),
    ]
    # run_before = [
    #     ("bag", "0002_remove_bagconfig"),
    # ]

    operations = [
        migrations.RunPython(from_bag_to_kadaster, from_kadaster_to_bag),
    ]
