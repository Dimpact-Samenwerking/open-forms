# Generated by Django 3.2.16 on 2022-10-24 10:52

from django.db import migrations, models

import tinymce.models

import csp_post_processor.fields
import openforms.utils.validators


class Migration(migrations.Migration):

    dependencies = [
        ("forms", "0049_remove_editgrid_open_when_empty"),
    ]

    operations = [
        migrations.AddField(
            model_name="form",
            name="begin_text_en",
            field=models.CharField(
                blank=True,
                help_text="The text that will be displayed at the start of the form to indicate the user can begin to fill in the form. Leave blank to get value from global configuration.",
                max_length=50,
                null=True,
                verbose_name="begin text",
            ),
        ),
        migrations.AddField(
            model_name="form",
            name="begin_text_nl",
            field=models.CharField(
                blank=True,
                help_text="The text that will be displayed at the start of the form to indicate the user can begin to fill in the form. Leave blank to get value from global configuration.",
                max_length=50,
                null=True,
                verbose_name="begin text",
            ),
        ),
        migrations.AddField(
            model_name="form",
            name="change_text_en",
            field=models.CharField(
                blank=True,
                help_text="The text that will be displayed in the overview page to change a certain step. Leave blank to get value from global configuration.",
                max_length=50,
                null=True,
                verbose_name="change text",
            ),
        ),
        migrations.AddField(
            model_name="form",
            name="change_text_nl",
            field=models.CharField(
                blank=True,
                help_text="The text that will be displayed in the overview page to change a certain step. Leave blank to get value from global configuration.",
                max_length=50,
                null=True,
                verbose_name="change text",
            ),
        ),
        migrations.AddField(
            model_name="form",
            name="confirm_text_en",
            field=models.CharField(
                blank=True,
                help_text="The text that will be displayed in the overview page to confirm the form is filled in correctly. Leave blank to get value from global configuration.",
                max_length=50,
                null=True,
                verbose_name="confirm text",
            ),
        ),
        migrations.AddField(
            model_name="form",
            name="confirm_text_nl",
            field=models.CharField(
                blank=True,
                help_text="The text that will be displayed in the overview page to confirm the form is filled in correctly. Leave blank to get value from global configuration.",
                max_length=50,
                null=True,
                verbose_name="confirm text",
            ),
        ),
        migrations.AddField(
            model_name="form",
            name="explanation_template_en",
            field=csp_post_processor.fields.CSPPostProcessedWYSIWYGField(
                base_field=tinymce.models.HTMLField(
                    blank=True,
                    help_text="Content that will be shown on the start page of the form, below the title and above the log in text.",
                    verbose_name="explanation template",
                ),
                blank=True,
                help_text="Content that will be shown on the start page of the form, below the title and above the log in text.",
                null=True,
                verbose_name="explanation template",
            ),
        ),
        migrations.AddField(
            model_name="form",
            name="explanation_template_nl",
            field=csp_post_processor.fields.CSPPostProcessedWYSIWYGField(
                base_field=tinymce.models.HTMLField(
                    blank=True,
                    help_text="Content that will be shown on the start page of the form, below the title and above the log in text.",
                    verbose_name="explanation template",
                ),
                blank=True,
                help_text="Content that will be shown on the start page of the form, below the title and above the log in text.",
                null=True,
                verbose_name="explanation template",
            ),
        ),
        migrations.AddField(
            model_name="form",
            name="name_en",
            field=models.CharField(max_length=150, null=True, verbose_name="name"),
        ),
        migrations.AddField(
            model_name="form",
            name="name_nl",
            field=models.CharField(max_length=150, null=True, verbose_name="name"),
        ),
        migrations.AddField(
            model_name="form",
            name="previous_text_en",
            field=models.CharField(
                blank=True,
                help_text="The text that will be displayed in the overview page to go to the previous step. Leave blank to get value from global configuration.",
                max_length=50,
                null=True,
                verbose_name="previous text",
            ),
        ),
        migrations.AddField(
            model_name="form",
            name="previous_text_nl",
            field=models.CharField(
                blank=True,
                help_text="The text that will be displayed in the overview page to go to the previous step. Leave blank to get value from global configuration.",
                max_length=50,
                null=True,
                verbose_name="previous text",
            ),
        ),
        migrations.AddField(
            model_name="form",
            name="submission_confirmation_template_en",
            field=tinymce.models.HTMLField(
                blank=True,
                help_text="The content of the submission confirmation page. It can contain variables that will be templated from the submitted form data. If not specified, the global template will be used.",
                null=True,
                validators=[openforms.utils.validators.DjangoTemplateValidator()],
                verbose_name="submission confirmation template",
            ),
        ),
        migrations.AddField(
            model_name="form",
            name="submission_confirmation_template_nl",
            field=tinymce.models.HTMLField(
                blank=True,
                help_text="The content of the submission confirmation page. It can contain variables that will be templated from the submitted form data. If not specified, the global template will be used.",
                null=True,
                validators=[openforms.utils.validators.DjangoTemplateValidator()],
                verbose_name="submission confirmation template",
            ),
        ),
        migrations.AddField(
            model_name="formdefinition",
            name="name_en",
            field=models.CharField(max_length=50, null=True, verbose_name="name"),
        ),
        migrations.AddField(
            model_name="formdefinition",
            name="name_nl",
            field=models.CharField(max_length=50, null=True, verbose_name="name"),
        ),
        migrations.AddField(
            model_name="formstep",
            name="next_text_en",
            field=models.CharField(
                blank=True,
                help_text="The text that will be displayed in the form step to go to the next step. Leave blank to get value from global configuration.",
                max_length=50,
                null=True,
                verbose_name="step next text",
            ),
        ),
        migrations.AddField(
            model_name="formstep",
            name="next_text_nl",
            field=models.CharField(
                blank=True,
                help_text="The text that will be displayed in the form step to go to the next step. Leave blank to get value from global configuration.",
                max_length=50,
                null=True,
                verbose_name="step next text",
            ),
        ),
        migrations.AddField(
            model_name="formstep",
            name="previous_text_en",
            field=models.CharField(
                blank=True,
                help_text="The text that will be displayed in the form step to go to the previous step. Leave blank to get value from global configuration.",
                max_length=50,
                null=True,
                verbose_name="step previous text",
            ),
        ),
        migrations.AddField(
            model_name="formstep",
            name="previous_text_nl",
            field=models.CharField(
                blank=True,
                help_text="The text that will be displayed in the form step to go to the previous step. Leave blank to get value from global configuration.",
                max_length=50,
                null=True,
                verbose_name="step previous text",
            ),
        ),
        migrations.AddField(
            model_name="formstep",
            name="save_text_en",
            field=models.CharField(
                blank=True,
                help_text="The text that will be displayed in the form step to save the current information. Leave blank to get value from global configuration.",
                max_length=50,
                null=True,
                verbose_name="step save text",
            ),
        ),
        migrations.AddField(
            model_name="formstep",
            name="save_text_nl",
            field=models.CharField(
                blank=True,
                help_text="The text that will be displayed in the form step to save the current information. Leave blank to get value from global configuration.",
                max_length=50,
                null=True,
                verbose_name="step save text",
            ),
        ),
    ]
