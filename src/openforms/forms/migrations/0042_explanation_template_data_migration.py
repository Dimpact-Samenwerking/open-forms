# Generated by Django 3.2.14 on 2022-08-26 15:29
from django.db import migrations


def append_explanation_template_message(apps, schema_editor):
    from openforms.authentication.registry import register as auth_register
    from django.utils.translation import gettext_lazy as _

    Form = apps.get_model("forms", "Form")
    for form in Form.objects.all():
        plugins = form.authentication_backends
        login_options_count = len(
            [plugin_id for plugin_id in plugins if plugin_id in auth_register._registry]
        )
        can_login = login_options_count > 0
        form_login_required = any(
            form_step.form_definition.login_required
            for form_step in form.formstep_set.all()
        )

        if form_login_required:
            message = _("Please authenticate to start the form.")
        elif can_login:
            message = _("Please authenticate or start the form anonymously.")
        else:
            message = _("Please click the button below to start the form.")

        form.explanation_template += f'<p id="start-form">{message}</p>'
        form.save()


def remove_explanation_template_message(apps, schema_editor):
    from bs4 import BeautifulSoup

    Form = apps.get_model("forms", "Form")

    for form in Form.objects.all():
        soup = BeautifulSoup(form.explanation_template, "html.parser")
        for message in soup.find_all("p", {"id": "start-form"}):
            message.decompose()
        form.explanation_template = str(soup)
        form.save()


class Migration(migrations.Migration):

    dependencies = [
        ("forms", "0041_convert_logic_action_type_value_to_variable"),
    ]

    operations = [
        migrations.RunPython(
            append_explanation_template_message,
            reverse_code=remove_explanation_template_message,
        ),
    ]
