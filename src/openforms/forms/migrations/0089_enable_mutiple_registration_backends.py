# Generated by Django 3.2.20 on 2023-07-18 14:08

from django.db import migrations, models
import django.db.models.deletion
import openforms.registrations.fields
from openforms.registrations.registry import register
from django.utils.translation import gettext as _


def forward(apps, _):
    Form = apps.get_model("forms", "Form")
    FormRegistrationBackend = apps.get_model("forms", "FormRegistrationBackend")
    for form in Form.objects.exclude(
        models.Q(registration_backend="") | models.Q(registration_backend__isnull=True)
    ):
        backend = form.registration_backend
        # getting the plugin for a human readable name
        # as form.get_registration_backend_display doesn't exist
        backend_label = (
            register[backend].get_label() if backend in register else _("Default")
        )
        FormRegistrationBackend.objects.create(
            form=form,
            key=backend,
            name=backend_label,
            backend=backend,
            options=form.registration_backend_options or {},
        )


def reverse(apps, _):
    # This will lose data, but preserves the simple cases of just one backend
    # No attempt at determinism for the multi-backend case is done; there will
    # probably be logic rules that will break anyway. Ops need to use db backups,
    # this is for this dev, that has "Update demo fixtures" at the end of this ticket's
    # todo-list
    FormRegistrationBackend = apps.get_model("forms", "FormRegistrationBackend")
    for backend in FormRegistrationBackend.objects.select_related("form"):
        backend.form.registration_backend = backend.backend
        backend.form.registration_backend_options = backend.options
        backend.form.save()


class Migration(migrations.Migration):
    dependencies = [
        ("forms", "0088_add_time_custom_error"),
    ]

    operations = [
        migrations.CreateModel(
            name="FormRegistrationBackend",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "key",
                    models.CharField(
                        help_text="The key to use to refer to this configuration in form logic.",
                        max_length=50,
                        verbose_name="key",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="A recognisable name for this backend configuration.",
                        max_length=255,
                        verbose_name="name",
                    ),
                ),
                (
                    "backend",
                    openforms.registrations.fields.RegistrationBackendChoiceField(
                        max_length=100, verbose_name="registration backend"
                    ),
                ),
                (
                    "options",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        verbose_name="registration backend options",
                    ),
                ),
                (
                    "form",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="registration_backends",
                        to="forms.form",
                    ),
                ),
            ],
            options={
                "unique_together": {("form", "key")},
                "verbose_name": "registration backend",
                "verbose_name_plural": "registration backends",
            },
        ),
        migrations.RunPython(forward, reverse),
        migrations.RemoveField(
            model_name="form",
            name="registration_backend",
        ),
        migrations.RemoveField(
            model_name="form",
            name="registration_backend_options",
        ),
    ]
