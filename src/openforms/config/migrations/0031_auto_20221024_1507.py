# Generated by Django 3.2.16 on 2022-10-24 13:07

import functools

from django.db import migrations, models

import tinymce.models

import openforms.config.models
import openforms.emails.validators
import openforms.template.validators
import openforms.utils.translations


class Migration(migrations.Migration):

    dependencies = [
        (
            "config",
            "0030_piwik_pro_support_squashed_0037_globalconfiguration_form_upload_default_file_types",
        ),
    ]

    operations = [
        migrations.AddField(
            model_name="globalconfiguration",
            name="confirmation_email_content_en",
            field=tinymce.models.HTMLField(
                default=functools.partial(
                    openforms.config.models._render,
                    *("emails/confirmation/content.html",),
                    **{}
                ),
                help_text="Content of the confirmation email message. Can be overridden on the form level",
                null=True,
                validators=[
                    openforms.template.validators.DjangoTemplateValidator(
                        required_template_tags=[
                            "appointment_information",
                            "payment_information",
                        ]
                    ),
                    openforms.emails.validators.URLSanitationValidator(),
                ],
                verbose_name="content",
            ),
        ),
        migrations.AddField(
            model_name="globalconfiguration",
            name="confirmation_email_content_nl",
            field=tinymce.models.HTMLField(
                default=functools.partial(
                    openforms.config.models._render,
                    *("emails/confirmation/content.html",),
                    **{}
                ),
                help_text="Content of the confirmation email message. Can be overridden on the form level",
                null=True,
                validators=[
                    openforms.template.validators.DjangoTemplateValidator(
                        required_template_tags=[
                            "appointment_information",
                            "payment_information",
                        ]
                    ),
                    openforms.emails.validators.URLSanitationValidator(),
                ],
                verbose_name="content",
            ),
        ),
        migrations.AddField(
            model_name="globalconfiguration",
            name="confirmation_email_subject_en",
            field=models.CharField(
                default=functools.partial(
                    openforms.config.models._render,
                    *("emails/confirmation/subject.txt",),
                    **{}
                ),
                help_text="Subject of the confirmation email message. Can be overridden on the form level",
                max_length=1000,
                null=True,
                validators=[openforms.template.validators.DjangoTemplateValidator()],
                verbose_name="subject",
            ),
        ),
        migrations.AddField(
            model_name="globalconfiguration",
            name="confirmation_email_subject_nl",
            field=models.CharField(
                default=functools.partial(
                    openforms.config.models._render,
                    *("emails/confirmation/subject.txt",),
                    **{}
                ),
                help_text="Subject of the confirmation email message. Can be overridden on the form level",
                max_length=1000,
                null=True,
                validators=[openforms.template.validators.DjangoTemplateValidator()],
                verbose_name="subject",
            ),
        ),
        migrations.AddField(
            model_name="globalconfiguration",
            name="form_begin_text_en",
            field=models.CharField(
                default=functools.partial(
                    openforms.utils.translations.get_default, *("Begin form",), **{}
                ),
                help_text="The text that will be displayed at the start of the form to indicate the user can begin to fill in the form",
                max_length=50,
                null=True,
                verbose_name="begin text",
            ),
        ),
        migrations.AddField(
            model_name="globalconfiguration",
            name="form_begin_text_nl",
            field=models.CharField(
                default=functools.partial(
                    openforms.utils.translations.get_default, *("Begin form",), **{}
                ),
                help_text="The text that will be displayed at the start of the form to indicate the user can begin to fill in the form",
                max_length=50,
                null=True,
                verbose_name="begin text",
            ),
        ),
        migrations.AddField(
            model_name="globalconfiguration",
            name="form_change_text_en",
            field=models.CharField(
                default=functools.partial(
                    openforms.utils.translations.get_default, *("Change",), **{}
                ),
                help_text="The text that will be displayed in the overview page to change a certain step",
                max_length=50,
                null=True,
                verbose_name="change text",
            ),
        ),
        migrations.AddField(
            model_name="globalconfiguration",
            name="form_change_text_nl",
            field=models.CharField(
                default=functools.partial(
                    openforms.utils.translations.get_default, *("Change",), **{}
                ),
                help_text="The text that will be displayed in the overview page to change a certain step",
                max_length=50,
                null=True,
                verbose_name="change text",
            ),
        ),
        migrations.AddField(
            model_name="globalconfiguration",
            name="form_confirm_text_en",
            field=models.CharField(
                default=functools.partial(
                    openforms.utils.translations.get_default, *("Confirm",), **{}
                ),
                help_text="The text that will be displayed in the overview page to confirm the form is filled in correctly",
                max_length=50,
                null=True,
                verbose_name="confirm text",
            ),
        ),
        migrations.AddField(
            model_name="globalconfiguration",
            name="form_confirm_text_nl",
            field=models.CharField(
                default=functools.partial(
                    openforms.utils.translations.get_default, *("Confirm",), **{}
                ),
                help_text="The text that will be displayed in the overview page to confirm the form is filled in correctly",
                max_length=50,
                null=True,
                verbose_name="confirm text",
            ),
        ),
        migrations.AddField(
            model_name="globalconfiguration",
            name="form_previous_text_en",
            field=models.CharField(
                default=functools.partial(
                    openforms.utils.translations.get_default, *("Previous page",), **{}
                ),
                help_text="The text that will be displayed in the overview page to go to the previous step",
                max_length=50,
                null=True,
                verbose_name="previous text",
            ),
        ),
        migrations.AddField(
            model_name="globalconfiguration",
            name="form_previous_text_nl",
            field=models.CharField(
                default=functools.partial(
                    openforms.utils.translations.get_default, *("Previous page",), **{}
                ),
                help_text="The text that will be displayed in the overview page to go to the previous step",
                max_length=50,
                null=True,
                verbose_name="previous text",
            ),
        ),
        migrations.AddField(
            model_name="globalconfiguration",
            name="form_step_next_text_en",
            field=models.CharField(
                default=functools.partial(
                    openforms.utils.translations.get_default, *("Next",), **{}
                ),
                help_text="The text that will be displayed in the form step to go to the next step",
                max_length=50,
                null=True,
                verbose_name="step next text",
            ),
        ),
        migrations.AddField(
            model_name="globalconfiguration",
            name="form_step_next_text_nl",
            field=models.CharField(
                default=functools.partial(
                    openforms.utils.translations.get_default, *("Next",), **{}
                ),
                help_text="The text that will be displayed in the form step to go to the next step",
                max_length=50,
                null=True,
                verbose_name="step next text",
            ),
        ),
        migrations.AddField(
            model_name="globalconfiguration",
            name="form_step_previous_text_en",
            field=models.CharField(
                default=functools.partial(
                    openforms.utils.translations.get_default, *("Previous page",), **{}
                ),
                help_text="The text that will be displayed in the form step to go to the previous step",
                max_length=50,
                null=True,
                verbose_name="step previous text",
            ),
        ),
        migrations.AddField(
            model_name="globalconfiguration",
            name="form_step_previous_text_nl",
            field=models.CharField(
                default=functools.partial(
                    openforms.utils.translations.get_default, *("Previous page",), **{}
                ),
                help_text="The text that will be displayed in the form step to go to the previous step",
                max_length=50,
                null=True,
                verbose_name="step previous text",
            ),
        ),
        migrations.AddField(
            model_name="globalconfiguration",
            name="form_step_save_text_en",
            field=models.CharField(
                default=functools.partial(
                    openforms.utils.translations.get_default,
                    *("Save current information",),
                    **{}
                ),
                help_text="The text that will be displayed in the form step to save the current information",
                max_length=50,
                null=True,
                verbose_name="step save text",
            ),
        ),
        migrations.AddField(
            model_name="globalconfiguration",
            name="form_step_save_text_nl",
            field=models.CharField(
                default=functools.partial(
                    openforms.utils.translations.get_default,
                    *("Save current information",),
                    **{}
                ),
                help_text="The text that will be displayed in the form step to save the current information",
                max_length=50,
                null=True,
                verbose_name="step save text",
            ),
        ),
        migrations.AddField(
            model_name="globalconfiguration",
            name="privacy_policy_label_en",
            field=tinymce.models.HTMLField(
                blank=True,
                default="Ja, ik heb kennis genomen van het {% privacy_policy %} en geef uitdrukkelijk toestemming voor het verwerken van de door mij opgegeven gegevens.",
                help_text="The label of the checkbox that prompts the user to agree to the privacy policy.",
                null=True,
                verbose_name="privacy policy label",
            ),
        ),
        migrations.AddField(
            model_name="globalconfiguration",
            name="privacy_policy_label_nl",
            field=tinymce.models.HTMLField(
                blank=True,
                default="Ja, ik heb kennis genomen van het {% privacy_policy %} en geef uitdrukkelijk toestemming voor het verwerken van de door mij opgegeven gegevens.",
                help_text="The label of the checkbox that prompts the user to agree to the privacy policy.",
                null=True,
                verbose_name="privacy policy label",
            ),
        ),
        migrations.AddField(
            model_name="globalconfiguration",
            name="save_form_email_content_en",
            field=tinymce.models.HTMLField(
                default=functools.partial(
                    openforms.config.models._render,
                    *("emails/save_form/content.html",),
                    **{}
                ),
                help_text="Content of the save form email message.",
                null=True,
                validators=[
                    openforms.template.validators.DjangoTemplateValidator(),
                    openforms.emails.validators.URLSanitationValidator(),
                ],
                verbose_name="content",
            ),
        ),
        migrations.AddField(
            model_name="globalconfiguration",
            name="save_form_email_content_nl",
            field=tinymce.models.HTMLField(
                default=functools.partial(
                    openforms.config.models._render,
                    *("emails/save_form/content.html",),
                    **{}
                ),
                help_text="Content of the save form email message.",
                null=True,
                validators=[
                    openforms.template.validators.DjangoTemplateValidator(),
                    openforms.emails.validators.URLSanitationValidator(),
                ],
                verbose_name="content",
            ),
        ),
        migrations.AddField(
            model_name="globalconfiguration",
            name="save_form_email_subject_en",
            field=models.CharField(
                default=functools.partial(
                    openforms.config.models._render,
                    *("emails/save_form/subject.txt",),
                    **{}
                ),
                help_text="Subject of the save form email message.",
                max_length=1000,
                null=True,
                validators=[openforms.template.validators.DjangoTemplateValidator()],
                verbose_name="subject",
            ),
        ),
        migrations.AddField(
            model_name="globalconfiguration",
            name="save_form_email_subject_nl",
            field=models.CharField(
                default=functools.partial(
                    openforms.config.models._render,
                    *("emails/save_form/subject.txt",),
                    **{}
                ),
                help_text="Subject of the save form email message.",
                max_length=1000,
                null=True,
                validators=[openforms.template.validators.DjangoTemplateValidator()],
                verbose_name="subject",
            ),
        ),
        migrations.AddField(
            model_name="globalconfiguration",
            name="submission_confirmation_template_en",
            field=tinymce.models.HTMLField(
                default=functools.partial(
                    openforms.utils.translations.get_default,
                    *("Thank you for submitting this form.",),
                    **{}
                ),
                help_text="The content of the submission confirmation page. It can contain variables that will be templated from the submitted form data.",
                null=True,
                validators=[openforms.template.validators.DjangoTemplateValidator()],
                verbose_name="submission confirmation template",
            ),
        ),
        migrations.AddField(
            model_name="globalconfiguration",
            name="submission_confirmation_template_nl",
            field=tinymce.models.HTMLField(
                default=functools.partial(
                    openforms.utils.translations.get_default,
                    *("Thank you for submitting this form.",),
                    **{}
                ),
                help_text="The content of the submission confirmation page. It can contain variables that will be templated from the submitted form data.",
                null=True,
                validators=[openforms.template.validators.DjangoTemplateValidator()],
                verbose_name="submission confirmation template",
            ),
        ),
    ]
