# Generated by Django 3.2.16 on 2023-02-01 13:49

from django.db import migrations
from glom import glom, assign, delete

from openforms.formio.utils import iter_components


def remove_value_expression(apps, schema_editor):
    FormDefinition = apps.get_model("forms", "FormDefinition")

    form_definitions = FormDefinition.objects.all()

    form_definitions_to_update = []
    for form_definition in form_definitions:
        updated_form_definition = False

        for comp in iter_components(configuration=form_definition.configuration):
            if (
                comp["type"] not in ["radio", "selectboxes", "select"]
                or glom(comp, "openForms.dataSrc", default=None) != "variable"
            ):
                continue

            if value_expression := glom(
                comp, "openForms.valueExpression", default=None
            ):
                items_expression = glom(comp, "openForms.itemsExpression")
                assign(
                    comp,
                    "openForms.itemsExpression",
                    {"map": [items_expression, value_expression]},
                )
                delete(comp, "openForms.valueExpression")
                updated_form_definition = True

        if updated_form_definition:
            form_definitions_to_update.append(form_definition)

    if form_definitions_to_update:
        FormDefinition.objects.bulk_update(
            form_definitions_to_update, fields=["configuration"]
        )


class Migration(migrations.Migration):

    dependencies = [
        ("forms", "0069_form_appointment_enabled"),
    ]

    operations = [
        migrations.RunPython(remove_value_expression, migrations.RunPython.noop)
    ]
